name: Stock Scanner V1 (Telegram)

on:
  workflow_dispatch:
    inputs:
      RUN_AFTER_HOURS:
        type: boolean
        description: "Allow running outside US market hours?"
        default: false
      ALWAYS_NOTIFY:
        type: boolean
        description: "Send a summary even if there are no NEW alerts?"
        default: true
      PING_ON_START:
        type: boolean
        description: "Send a startup ping?"
        default: false
      PING_ON_END:
        type: boolean
        description: "Send a completion ping?"
        default: false
      TICKERS:
        description: "Optional override list (comma/space separated)"
        required: false
        default: ""

  # Fire every 10 min within a UTC window that covers both EST and EDT RTH.
  # EDT: 13:30–20:00 UTC, EST: 14:30–21:00 UTC. We'll self-throttle to 50-min cadence.
  schedule:
    - cron: "*/10 13-21 * * 1-5"

concurrency:
  group: stock-scanner
  cancel-in-progress: true   # avoid overlap if a run lasts too long

jobs:
  scan:
    runs-on: ubuntu-latest
    timeout-minutes: 12
    env:
      TZ: America/New_York

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pandas numpy yfinance requests certifi
          fi

      # Enforce US RTH AND a 50-min cadence anchored at 09:30 ET (unless overridden)
      - name: Skip unless US RTH and on 50-min cadence (unless overridden)
        run: |
          if [ "${{ inputs.RUN_AFTER_HOURS }}" != "true" ]; then
            dow=$(TZ=America/New_York date +%u)
            hh=$(TZ=America/New_York date +%H)
            mm=$(TZ=America/New_York date +%M)
            mins=$((10#$hh*60 + 10#$mm))
            open=$((9*60 + 30))   # 09:30
            close=$((16*60))      # 16:00

            # Weekend?
            if [ "$dow" -ge 6 ]; then
              echo "Weekend — exiting."
              exit 0
            fi

            # Outside regular trading hours?
            if [ $mins -lt $open ] || [ $mins -gt $close ]; then
              echo "Outside US RTH — exiting."
              exit 0
            fi

            # 50-min cadence from the opening bell: 09:30, 10:20, 11:10, 12:00, 12:50, 13:40, 14:30, 15:20
            if [ $(((mins - open) % 50)) -ne 0 ]; then
              echo "Not on 50-min cadence — skipping this tick."
              exit 0
            fi
          fi

      - name: Run scanner
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:  ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_CHAT_IDS: ${{ secrets.TELEGRAM_CHAT_IDS }}

          MARKET_ONLY: ${{ inputs.RUN_AFTER_HOURS && 'false' || 'true' }}
          ALWAYS_NOTIFY: ${{ inputs.ALWAYS_NOTIFY && 'true' || 'false' }}
          TELEGRAM_PING_ON_START: ${{ inputs.PING_ON_START && 'true' || 'false' }}
          TELEGRAM_PING_ON_END:   ${{ inputs.PING_ON_END && 'true' || 'false' }}
          TICKERS: ${{ inputs.TICKERS }}
        run: |
          PYTHONUNBUFFERED=1 python scanner_dual_tf_vp_spyder_telegram_loop_dip3.py

      - name: Upload CSV + state as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: scanner-output
          path: |
            scanner_dual_tf_vp.csv
            alerts_seen.json
